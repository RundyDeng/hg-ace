<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-4.0.xsd
				http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-4.0.xsd
				http://www.springframework.org/schema/aop classpath:org/springframework/aop/config/spring-aop-4.0.xsd
				http://www.springframework.org/schema/tx classpath:org/springframework/transaction/config/spring-tx-4.0.xsd">

	<!-- Enable annotation configuration -->
	<context:annotation-config />
	<!-- Scan packages for Spring annotations -->
	<context:component-scan base-package="com.jeefw" />

	<bean id="DS1" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="jdbc:oracle:thin:@192.1.4.4:1521:oracle11" />
		<property name="username" value="dtmynew" />
		<property name="password" value="dtmynew" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat,log4j,wall" />
	</bean>
	<bean id="DS2" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="jdbc:oracle:thin:@192.1.4.4:1521:oracle11" />
		<property name="username" value="dthrz" />
		<property name="password" value="dthrz" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat,log4j,wall" />
	</bean>
	<bean id="switchDataSource" class="core.dbSource.SwitchDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="DS1" key="DS1"></entry>  
                <entry value-ref="DS2" key="DS2"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="DS1">  
        </property>  
    </bean>  

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">core.dao.MyOracleDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.jdbc.fetch_size">30</prop>
				<prop key="hibernate.jdbc.batch_size">30</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- select hibernate_sequence.nextval from dual -->
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- hibernate.id.new_generator_mappings参数设置：MySQL和SQL Server为false，Oracle为true -->
				<prop key="hibernate.id.new_generator_mappings">true</prop>
				<!-- 此注释里代码只跟全文检索有关，如需全文检索功能，放开注释，然后找到本文件的第87行和web.xml的第15行放开注释，重启应用服务器即可。可配置，不影响框架使用。苹果Mac电脑需要修改hibernate.search.default.indexBase参数。 -->
				<!-- <prop key="hibernate.search.default.directory_provider">filesystem</prop> 
					<prop key="hibernate.search.default.indexBase">D:/JeefwLuceneIndexes</prop> 
					<prop key="hibernate.search.default.refresh">1800</prop> <prop key="hibernate.search.default.indexwriter.max_merge_docs">100</prop> 
					<prop key="hibernate.search.default.indexwriter.ram_buffer_size">64</prop> 
					<prop key="hibernate.search.default.optimizer.operation_limit.max">1000</prop> 
					<prop key="hibernate.search.default.optimizer.transaction_limit.max">100</prop> -->
				<prop key="hibernate.default_schema">dtmynew</prop>
			</props>
		</property>
		<property name="dataSource" ref="switchDataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.jeefw.model.sys</value>
				<value>com.jeefw.model.haskey</value>
			</list>
		</property>
	</bean>
	<bean class="core.util.timer.TimerTaskChi"></bean>
	<bean class="core.util.timer.TimerTaskListener"></bean>
	<bean id="dataSourceExchange" class="core.dbSource.DataSourceExchange"/>  
	<!-- 配置事务管理器 指定其作用的sessionFactory把事务交给Spring去处理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:config>
        <aop:pointcut id="swhcon" expression="execution(* com.jeefw.service..*.*(..))"/>
        <aop:advisor advice-ref="dataSourceExchange" pointcut-ref="swhcon" order="1"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="swhcon" order="2"/>
    </aop:config>
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- <tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes> -->
	</tx:advice>



	<!-- 此注释里代码的作用是应用服务器每次启动都生成索引。在SystemInitListener里执行。可配置，不影响框架使用。 -->
	<!-- <bean id="informationService" class="com.jeefw.service.sys.impl.InformationServiceImpl" 
		/> -->

<!-- 搜索Quartz -->
	<bean id="indexingInformationJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="informationServiceImpl" />
		<property name="targetMethod" value="indexingInformation" />
	</bean>
	<!-- 每天凌晨2点执行定时任务，生成索引。 -->
	<bean id="indexingInformationJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="indexingInformationJob" />
		<property name="cronExpression" value="0 0 2 * * ?" />
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="triggers">
			<list>
				<ref bean="indexingInformationJobTrigger" />
			</list>
		</property>
	</bean>

	<bean id="updateUserPwdLogicBean" class="com.jeefw.app.logic.UpdateUserPwdLogicServer" />

	<!-- 配置业务逻辑池 -->
	<bean id="logicExecuteWorkerEnginBean" class="com.jeefw.app.logic.LogicExecuteWorkerEngine">
		<property name="requestBeanTrans">
			<map>
				<entry key="1302">
					<value>com.jeefw.app.bean.UpdateUserPwdRequestBean</value>
				</entry>
			</map>
		</property>
		<property name="logicPool">
			<map>
				<entry key="1302">
					<ref bean="updateUserPwdLogicBean" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- 配置接口传输操作协议对象 -->
	<bean id="transmissionBean" class="com.jeefw.app.logic.Transmission">
	</bean>
<!-- 	<bean id="regionService" class="com.jeefw.service.memoryinit.InitDataServiceImpl"  
        init-method="initData" lazy-init="true"/>  -->  <!-- 方法初始化可以注解@PostConstruct -->
        
    
</beans>